{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n;\n\nvar utils = require('../internal/convert');\n\nvar v = require('../internal/validate');\n/**\n * Makes an elevation request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.elevation\n * @function\n * @param {Object} query\n * @param {LatLng[]} query.locations\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\n\n\nexports.elevation = {\n  url: 'https://maps.googleapis.com/maps/api/elevation/json',\n  validator: v.object({\n    locations: utils.arrayOf(utils.latLng),\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};\n/**\n * Makes an elevation-along-path request.\n *\n * @memberof! GoogleMapsClient\n * @name GoogleMapsClient.elevationAlongPath\n * @function\n * @param {Object} query\n * @param {LatLng[]|string} query.path\n * @param {number} query.samples\n * @param {ResponseCallback} callback Callback function for handling the result\n * @return {RequestHandle}\n */\n\nexports.elevationAlongPath = {\n  url: 'https://maps.googleapis.com/maps/api/elevation/json',\n  validator: v.object({\n    path: function path(_path) {\n      if (typeof _path == 'string') {\n        return 'enc:' + _path;\n      } else {\n        return utils.arrayOf(utils.latLng)(_path);\n      }\n    },\n    samples: v.number,\n    retryOptions: v.optional(utils.retryOptions),\n    timeout: v.optional(v.number)\n  })\n};","map":null,"metadata":{},"sourceType":"script"}